<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://linho1150.github.io/</id><title>LeeJaeJun</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-12-22T17:51:19+09:00</updated> <author> <name>LeeJaeJun</name> <uri>https://linho1150.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://linho1150.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://linho1150.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 LeeJaeJun </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Swift, Basic swift (If, For, Optional Type)</title><link href="https://linho1150.github.io/posts/swift_basic1/" rel="alternate" type="text/html" title="Swift, Basic swift (If, For, Optional Type)" /><published>2021-12-08T00:00:00+09:00</published> <updated>2021-12-08T00:00:00+09:00</updated> <id>https://linho1150.github.io/posts/swift_basic1/</id> <content src="https://linho1150.github.io/posts/swift_basic1/" /> <author> <name>LeeJaeJun</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> Swift 기본 if 문 &amp;amp; for 문 let individualScores:Array = [42,52,23,56,75] //값이 변하지 않아서 let선언 var teamScore:Int=0 //값이 변해서 var 선언 for score in individualScores{ if score &amp;gt; 50{ teamScore+=10 } else{ teamScore-=10 } } print(teamScore) //10 나는 변수를 선언하는데 최대한 타입을 적기로 하였다. Javascript를 하면서 느낀점이 Type이 지정되어있지 않으면 코딩을 하는 과정에서 많은 문제점이 발생하더라 .. IF문은 조금 난해했다. Array를 선언하는 ... </summary> </entry> <entry><title>Swift, Basic swift (Simple Variable)</title><link href="https://linho1150.github.io/posts/swift_basic/" rel="alternate" type="text/html" title="Swift, Basic swift (Simple Variable)" /><published>2021-12-08T00:00:00+09:00</published> <updated>2021-12-09T01:50:33+09:00</updated> <id>https://linho1150.github.io/posts/swift_basic/</id> <content src="https://linho1150.github.io/posts/swift_basic/" /> <author> <name>LeeJaeJun</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> Swift 기본 출력하기 print("Hello, World") 변수 선언 var myVariable = 42 myVariable=52 //변할 수 있는 값 선언 = var 타입 var myInteger:Int = 42 //변수명 뒤에 ":타입"을 적으면 타입을 지정할 수 있음 let myConstant = 42 myConstant = 52 //Error //변하지 않는 값 선언 = let 타입 어디선가 만났던 var 과 let이 나오는데 javascript와 동일하다. var Type으로 선언한 변수 myvariable은 중간에 값을 52로 변경이 가능하다. 하지만 let은 C언어의 const와 동일하게 값 변경이 불가능하다. 이렇게 선언하는 이유는 포인터를 잃어버리거나 메모리 누수 방... </summary> </entry> <entry><title>Swift, SwiftUI (Alert,.frame, button, VStack, HStack,init())</title><link href="https://linho1150.github.io/posts/swift/" rel="alternate" type="text/html" title="Swift, SwiftUI (Alert,.frame, button, VStack, HStack,init())" /><published>2021-12-06T00:00:00+09:00</published> <updated>2021-12-06T00:00:00+09:00</updated> <id>https://linho1150.github.io/posts/swift/</id> <content src="https://linho1150.github.io/posts/swift/" /> <author> <name>LeeJaeJun</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> SwiftUI 따라하기 변수 선언시 어노테이션을 붙여줘야 선언에 문제가없음 예를들어 @State private var isActivated:Bool = false 위 코드 처럼 선언해야 아래서 코드를 작성할때 문제가 안남. 변수를 바탕으로 코드를 변경하고 싶을땐 아래와 같이 활용하면됌 .background(isActivated? Color.black : Color.white) Swift 생성자 struct MyView:View{ var BtnText:Array = [String]() //String형태의 배열 생성 init(btnTextArray:[String]){ self.BtnText.append(btnTextArray[0]) self.... </summary> </entry> <entry><title>Swift, Hello swift</title><link href="https://linho1150.github.io/posts/swift1/" rel="alternate" type="text/html" title="Swift, Hello swift" /><published>2021-12-06T00:00:00+09:00</published> <updated>2021-12-22T17:50:30+09:00</updated> <id>https://linho1150.github.io/posts/swift1/</id> <content src="https://linho1150.github.io/posts/swift1/" /> <author> <name>LeeJaeJun</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> Swift 시작하기 꼼꼼한 재은 씨의 Swift: 문법편을 읽고서 Swift는 어떤 언어일까? 성능 향상까지 신경써야했던 오브젝트-C를 버리고 개발자가 새로운 아이디어를 실현시킬 수 있는 것에 집중하도록 만들어진 프로그래밍 언어. (애플은 기술적 성능 향상보다 다채로운 앱이 생성되길 바란다 ) 생산성과 성능 모두를 잡은 언어. ( 맞는지 확인이 필요함 .. ) 스위프트 언어란? Static Binding 과 Dynamic Binding Static Binding이란? 컴파일 이후에 프로그램이 결정되는것 스위프트, 자바 Dynamic Binding 실행 시간에 프로그램이 결정되는것 파이썬 , 자바스크립트 변수 선언이 엄격한 언어 안정성을 높이기 위한 기술. 이후... </summary> </entry> <entry><title>Swift, SwiftUI - What is Text()?</title><link href="https://linho1150.github.io/posts/Swift-TextView/" rel="alternate" type="text/html" title="Swift, SwiftUI - What is Text()?" /><published>2021-12-06T00:00:00+09:00</published> <updated>2021-12-15T01:41:40+09:00</updated> <id>https://linho1150.github.io/posts/Swift-TextView/</id> <content src="https://linho1150.github.io/posts/Swift-TextView/" /> <author> <name>LeeJaeJun</name> </author> <category term="Programming" /> <category term="Swift" /> <summary> SwiftUI - What is Text()? SwiftUI에 관하여 swift는 StoryBoard를 사용하여 UI를 제작해왔지만 최근 “SwiftUI”를 발표하면서 기존 스토리 보드형식이 갖고 있던 협업의 문제점과 갈수록 커져가는 규모로 인해 새로운 인터페이스인 SwiftUI를 도입했다고 한다. ContentView.swift import SwiftUI struct ContentView: View { var body: some View { VStack { Text("Welcome to my first Project") .font(.headline) //글자 크기 (자동) .fontWe... </summary> </entry> </feed>
